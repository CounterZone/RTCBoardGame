{"version":3,"file":"component---src-pages-connect-6-js-2b82a3b35b7e13d87630.js","mappings":"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","sources":["webpack://rtc_boardgame/./src/src/connect6/connect6.js","webpack://rtc_boardgame/./src/pages/connect6.js"],"sourcesContent":["import * as React from \"react\"\r\nimport Game from '../game_template';\r\nimport {Button,ListGroup,Row,Container,Col} from 'react-bootstrap';\r\n\r\n\r\nconst majorLineStyle={\r\n\r\n\"stroke\":\"#000000\",\r\n\"strokeWidth\":\"0.3\"\r\n\r\n}\r\n\r\n\r\nvar b1=new Array(19);\r\nvar s=[];\r\n\r\nfor (var i=0;i<19;i++) b1[i]=\" \";\r\nfor (var i=0;i<19;i++)s.push(b1.slice());\r\n\r\nvar globalGameState={\r\n\"piecesState\":s,\r\n\"nextPlayer\":\"o\",    // x-white, o-black (first move)\r\n\"playerSymbol\":\"o\",\r\n\"movesLeft\":1,\r\n\"playerSymbolSelected\":false,\r\n\"winner\":null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass InfoBoard extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state={\r\n    \"gameState\":globalGameState,\r\n    \"remotePlayerConnected\":false,\r\n    \"receivedResetRequest\":false,\r\n    \"sentResetRequest\":false\r\n    }\r\n\r\n  }\r\n  static getDerivedStateFromProps  (props,state){\r\n    return ({'remotePlayerConnected':props.remotePlayerConnected})\r\n  }\r\n  onMove(move){\r\n    if (move.type===\"reset\"){\r\n      this.setState({receivedResetRequest:true});\r\n      if(this.state.sentResetRequest){\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  restart(self){\r\n    if (!self.state.remotePlayerConnected){\r\n      self.reset();\r\n      return\r\n    }\r\n\r\n    if (self.state.receivedResetRequest){\r\n      self.props.sendMove({type:\"reset\"});\r\n      self.reset();\r\n    }\r\n\r\n    else{\r\n      this.props.sendChat(\"Restart?\");\r\n      this.props.sendMove({type:\"reset\"});\r\n      this.setState({sentResetRequest:true});\r\n    }\r\n\r\n  }\r\n  reset(){\r\n    var b1=new Array(19);\r\n    var s=[];\r\n\r\n    for (var i=0;i<19;i++) b1[i]=\" \";\r\n    for (var i=0;i<19;i++)s.push(b1.slice());\r\n\r\n    globalGameState={\r\n    \"piecesState\":s,\r\n    \"nextPlayer\":\"o\",\r\n    \"movesLeft\":1,\r\n    \"playerSymbol\":\"o\",\r\n    \"playerSymbolSelected\":false,\r\n    \"winner\":null\r\n    }\r\n    this.setState({\r\n    \"gameState\":globalGameState,\r\n    \"receivedResetRequest\":false,\r\n    \"sentResetRequest\":false\r\n    });\r\n    this.props.gameBoardRef.current.setState({\"gameState\":globalGameState});\r\n    this.props.log(\"Restarted!\");\r\n  }\r\n\r\n  render(){\r\n    var info=\"\";\r\n    if (this.state.gameState.winner !==null){\r\n      info=\"Winner: \"+(this.state.gameState.winner===\"o\"?\"\\u2B24\":\"\\u25CB\") + \"!\";\r\n    }\r\n    else if (this.state.remotePlayerConnected===true){\r\n      info=\"Current Player: \";\r\n      if(this.state.gameState.playerSymbolSelected===false){\r\n      info+=\"local (black)\"\r\n      }else{\r\n        if (this.state.gameState.nextPlayer==this.state.gameState.playerSymbol){\r\n          info+= \"local (\" + (this.state.gameState.nextPlayer===\"o\"?\"\\u2B24\":\"\\u25CB\") + \")\";\r\n        }else{\r\n          info+= \"remote (\" + (this.state.gameState.nextPlayer===\"o\"?\"\\u2B24\":\"\\u25CB\") + \")\";\r\n        }\r\n\r\n      }\r\n    }else{\r\n      info=\"Playing locally.\";\r\n    }\r\n\r\n    const infoStyle={\r\n      position: 'relative',\r\n      marginTop:\"2vh\",\r\n\r\n    }\r\n    const buttonStyle={\r\n      float:\"right\"\r\n    }\r\n    return (\r\n      <div style={infoStyle} >\r\n      <Container>\r\n     <span >\r\n       {info}\r\n     </span>\r\n     <Button style={buttonStyle} size=\"sm\" variant=\"outline-primary\" onClick={()=>this.restart(this)}>\r\n       Restart\r\n     </Button>\r\n       </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Board extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.paintBox=React.createRef();\r\n    this.state={\"width\":\"100\",\r\n    \"height\":\"100\",\r\n    \"gameState\":globalGameState,\r\n    \"remotePlayerConnected\":false\r\n    }\r\n\r\n  }\r\n  static getDerivedStateFromProps  (props,state){\r\n    return ({'remotePlayerConnected':props.remotePlayerConnected})\r\n  }\r\n  onClick(x,y){\r\n    if (this.state.remotePlayerConnected===true){\r\n      if (this.state.gameState.nextPlayer===this.state.gameState.playerSymbol){\r\n        this.makeMove(x,y)\r\n        }\r\n    }else{\r\n      this.makeMove(x,y);\r\n    }\r\n  }\r\n\r\n\r\n  checkWin(lastMove){\r\n    const board=this.state.gameState.piecesState;\r\n    const directions=[[0,1],[1,0],[1,1],[1,-1]];\r\n    for (let direc of directions){\r\n      let [dx,dy]=direc;\r\n      let [x,y]=lastMove;\r\n      let count=1;\r\n      while (x>0 && y>0 && x<19 && y<19 && board[x][y]===board[x-dx][y-dy]){\r\n        x-=dx;\r\n        y-=dy;\r\n        count+=1;\r\n      }\r\n      [x,y]=lastMove;\r\n      while (x>0 && y>0 && x<19-1 && y<19-1 && board[x][y]===board[x+dx][y+dy]){\r\n        x+=dx;\r\n        y+=dy;\r\n        count+=1;\r\n      }\r\n      if (count>=6) {\r\n        return board[x][y];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  sendMove(state){\r\n    this.props.sendMove({type:\"move\",newState:state});\r\n  }\r\n\r\n  onMove(move){\r\n    if(move.type===\"move\"){\r\n          var newState=move.newState;\r\n          var s=this.state.gameState;\r\n          if(!s.playerSymbolSelected){\r\n            newState.playerSymbol=\"x\";\r\n            newState.playerSymbolSelected=true;\r\n          }else{\r\n            newState.playerSymbol=s.playerSymbol;\r\n          }\r\n          this.setState({gameState:newState});\r\n          this.props.gameInfoPanelRef.current.setState({gameState:newState});\r\n        }\r\n  }\r\n\r\n\r\n  makeMove(x,y){\r\n    if (this.state.gameState.winner!==null)return;\r\n\r\n    var s=this.state.gameState;\r\n\r\n    s.piecesState[x][y]=s.nextPlayer;\r\n\r\n    var winner =this.checkWin([x,y]);\r\n    if(winner!==null){ // someone win this subboard\r\n        s.winner=winner;\r\n    } else{\r\n      if (s.movesLeft==2){s.movesLeft-=1;}\r\n      else{\r\n      s.movesLeft=2;\r\n      s.nextPlayer= s.nextPlayer===\"o\"?\"x\":\"o\";\r\n      if(this.state.remotePlayerConnected && !s.playerSymbolSelected){\r\n        s.playerSymbolSelected=true;\r\n      }\r\n    }\r\n    }\r\n\r\n      this.setState({gameState:s});\r\n      this.props.gameInfoPanelRef.current.setState({gameState:s});\r\n\r\n      if(this.state.remotePlayerConnected){\r\n        this.sendMove(s);\r\n      }\r\n\r\n  }\r\n    componentDidMount() {\r\n      var w=Math.min(this.paintBox.current.offsetWidth,this.paintBox.current.offsetHeight);\r\n      this.setState({\"width\":w,\"height\":w})\r\n    }\r\n    render(){\r\n      const boxstyle={\r\n        width:'100%',\r\n        height:'100%',\r\n      }\r\n      var svgstyle={\r\n        margin:\"auto\",\r\n        display: \"block\",\r\n        width:this.state.width,\r\n        height:this.state.height,\r\n      }\r\n      var pieces=[];\r\n      var lines=[];\r\n      for (let i=0;i<19;i++){\r\n        var pos=5+90*i/18;\r\n        lines.push(\r\n          <line x1={pos} y1=\"5\" x2={pos} y2=\"95\" key={i} style={majorLineStyle} />\r\n        );\r\n        lines.push(\r\n          <line y1={pos} x1=\"5\" y2={pos} x2=\"95\" key={i+19}  style={majorLineStyle} />\r\n        );\r\n      }\r\n      for (let i=0;i<19;i++){\r\n        for (let j=0;j<19;j++){\r\n          pieces.push(\r\n            <Piece x={i} y={j} key={i*19+j} status={this.state.gameState.piecesState[i][j]} onClick={()=>this.onClick(i,j)} />\r\n          );\r\n        }\r\n      }\r\n    return (\r\n      <div ref={this.paintBox} style={boxstyle}>\r\n    <svg viewBox=\"0 0 100 100\" style={svgstyle}>\r\n    {lines}\r\n    {pieces}\r\n    </svg>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\n}\r\n\r\n\r\nclass Piece extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={'status':this.props.status} // \" \" or \"o\"(red)  or  \"x\"(blue)\r\n  }\r\n  static getDerivedStateFromProps  (props,state){\r\n    return ({'status':props.status})\r\n  }\r\n  onClick(self){\r\n    self.props.onClick();\r\n  }\r\n  render(){\r\n    const radius=90/18/2.2;\r\n    const rectlength=90/18;\r\n    var marker =\"\";\r\n    if (this.state.status===\"o\"){\r\n      marker= <circle cx={5+this.props.x*rectlength} cy={5+this.props.y*rectlength} r={radius} stroke=\"none\"  fill=\"black\" />;\r\n    }else if (this.state.status===\"x\"){\r\n    marker=<circle  cx={5+this.props.x*rectlength} cy={5+this.props.y*rectlength} r={radius}  stroke=\"none\" fill=\"white\" />;\r\n    }else if  (this.props.status===\" \"){\r\n    marker= <rect x={5+this.props.x*rectlength-rectlength/2} y={5+this.props.y*rectlength-rectlength/2} width={rectlength} height={rectlength} fillOpacity=\"0\"\r\n    onClick={()=>{this.onClick(this)}} />; // clickbox\r\n}\r\n    return(\r\n      <g>\r\n      {marker}\r\n      </g>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport {Board,InfoBoard}\r\n","import * as React from \"react\"\r\nimport Game from '../src/game_template';\r\nimport {Board,InfoBoard} from '../src/connect6/connect6';\r\n\r\n\r\nconst Page = () => {\r\n  return (\r\n    <main>\r\n      <title>Ultimate tic-tac-toe</title>\r\n      <Game gameBoard={Board} gameInfoPanel={InfoBoard}/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Page\r\n"],"names":["majorLineStyle","b1","Array","s","i","push","slice","globalGameState","InfoBoard","props","state","getDerivedStateFromProps","remotePlayerConnected","onMove","move","type","this","setState","receivedResetRequest","sentResetRequest","reset","restart","self","sendMove","sendChat","gameBoardRef","current","log","render","info","gameState","winner","playerSymbolSelected","nextPlayer","playerSymbol","style","position","marginTop","Container","Button","float","size","variant","onClick","React","Board","paintBox","x","y","makeMove","checkWin","lastMove","board","piecesState","direc","dx","dy","count","newState","gameInfoPanelRef","movesLeft","componentDidMount","w","Math","min","offsetWidth","offsetHeight","svgstyle","margin","display","width","height","pieces","lines","pos","x1","y1","x2","y2","key","j","Piece","status","ref","viewBox","radius","marker","cx","cy","r","stroke","fill","rectlength","fillOpacity","gameBoard","gameInfoPanel"],"sourceRoot":""}